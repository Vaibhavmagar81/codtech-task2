import nmap
import requests

def scan_open_ports(target):
    print(f"Scanning {target} for open ports...")
    nm = nmap.PortScanner()
    nm.scan(target, '1-1024')  # Scan the first 1024 ports
    for host in nm.all_hosts():
        print(f"Host: {host} ({nm[host].hostname()})")
        print(f"State: {nm[host].state()}")
        for proto in nm[host].all_protocols():
            print(f"Protocol: {proto}")
            lport = nm[host][proto].keys()
            for port in sorted(lport):
                print(f"Port: {port}\tState: {nm[host][proto][port]['state']}")

def check_software_version(url, known_versions):
    try:
        response = requests.get(url)
        server_header = response.headers.get('Server')
        if server_header:
            print(f"Server: {server_header}")
            for software, version in known_versions.items():
                if software in server_header and version not in server_header:
                    print(f"Warning: {software} might be outdated! Current version: {server_header}, Expected: {version}")
        else:
            print("Server header not found!")
    except requests.RequestException as e:
        print(f"Error connecting to {url}: {e}")

def main():
    target = input("Enter the target IP address or domain: ")
    scan_open_ports(target)
    
    # Define known versions of common software
    known_versions = {
        'Apache': '2.4.52',
        'nginx': '1.21.3',
        # Add more software and their latest versions here
    }
    
    url = f"http://{target}"
    check_software_version(url, known_versions)

if __name__ == "__main__":
    main()
